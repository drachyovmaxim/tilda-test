function t_initZoom() {
  // if ($('[data-zoomable="yes"]').length) {
  //   $('[data-zoomable="yes"]').addClass("t-zoomable");
  //   $("body").append('<div class="t-zoomer__wrapper">\
  //     <div class="t-zoomer__container">\
  //     </div>\
  //     <div class="t-zoomer__close">\
  //       <div class="t-zoomer__close-line t-zoomer__close-line-first"></div>\
  //       <div class="t-zoomer__close-line t-zoomer__close-line-second"></div>\
  //     </div>\
  //   </div>');
  //   t_showZoom();
  // }

  if (window.$isMobile) {
    $('#reczoom').addClass('reczoom-mobile');
  }

  t_sldsInit('zoom');

  $('.zcontainer').each(function(index) {
    var element = $('#reczoom'),
        container = $(this),
        image = $(this).find('.zimg'),
        imageW = image.width(),
        imageH = image.height(),
        maxW = container.width(),
        maxH = container.height(),
        scale = Math.min(maxW / imageW, maxH / imageH),
        biggestScale = Math.max(maxW / imageW, maxH / imageH),
        allowZoom = false;

    if (imageW > maxW || imageH > maxH) {
      if (imageW < maxW || imageH < maxH) {
        imageW = imageW*biggestScale;
        imageH = imageH*biggestScale;
        scale = Math.min(maxW / imageW, maxH / imageH);
      }
      allowZoom = true;
    } else {
      scale = 1;
    }

    var currentW = imageW*scale,
        currentH = imageH*scale,
        imgOffsetX = (maxW-currentW)/2,
        imgOffsetY = (maxH-currentH)/2;

    image.on('mousedown', function(e) {
      e.preventDefault();
    });

    image.width(imageW).height(imageH).css({
      transform: 'translate3d('+imgOffsetX+'px, '+imgOffsetY+'px, 0) scale(' + scale + ')'
    });

    if (allowZoom) {
      image.addClass('z-img-zoomable');

      delete Hammer.defaults.cssProps.userSelect;
      var hammer = new Hammer(image[0], {
        domEvents: true,
        threshold: 0,
        recognizers: [
          [Hammer.Pan, { direction: Hammer.DIRECTION_ALL }],
          [Hammer.Tap],
          [Hammer.Pinch]
        ]
      });

      var clicked = false;
      var lastPosX = imgOffsetX;
      var lastPosY = imgOffsetY;
      var maxScale = 1;
      var minScale = scale;
      var clickX = 0;
      var clickY = 0;
      var zoomedClickX = 0;
      var zoomedClickY = 0;
      var width = 0;
      var height = 0;
      var isDragging = false;
      var deltaX = 0;
      var deltaY = 0;
      var adjustScale = scale;
      var currentScale = null;

      if (imageW>maxW) {
        var width = maxW;
      } else {
        var width = imageW;
      }
      if (imageH>maxH) {
        var height = maxH;
      } else {
        var height = imageH;
      }
      
      var coorMaxX = width - imageW;
      var coorMinX = maxW - width;
      var coorMaxY = height - imageH;
      var coorMinY = maxH - height;

      hammer.on('tap', function(ev) {
        if (clicked) {
          image.css({
            transform: 'translate3d('+imgOffsetX+'px, '+imgOffsetY+'px, 0) scale(' + scale + ')'
          });
          image.removeClass('z-img-dragable');
          element.find('.t-slds__items-wrapper').attr('data-slider-stop', 'false');
          element.removeClass('t-zoomer__hide-controls');
          
          if (imageW*scale>maxW) {
            width = maxW;
          } else {
            width = imageW;
          }
          if (imageH*scale>maxH) {
            height = maxH;
          } else {
            height = imageH;
          }
          coorMaxX = width - imageW;
          coorMinX = maxW - width;
          coorMaxY = height - imageH;
          coorMinY = maxH - height;

          lastPosX = imgOffsetX;
          lastPosY = imgOffsetY;
          adjustScale = scale;
          clicked = false;
        } else {
          clicked = true;
          element.addClass('t-zoomer__hide-controls');
          element.find('.t-slds__items-wrapper').attr('data-slider-stop', 'true');
          image.addClass('zimg-animated z-img-dragable');
          clickX = ev.center.x - image.offset().left;
          clickY = ev.center.y - (image.offset().top - element.offset().top);
          zoomedClickX = clickX/scale;
          zoomedClickY = clickY/scale;
          coorX = clickX - zoomedClickX + imgOffsetX;
          coorY = clickY - zoomedClickY + imgOffsetY;

          if (imageW*maxScale>maxW) {
            width = maxW;
          } else {
            width = imageW;
          }
          if (imageH*maxScale>maxH) {
            height = maxH;
          } else {
            height = imageH;
          }
          coorMaxX = width - imageW;
          coorMinX = maxW - width;
          coorMaxY = height - imageH;
          coorMinY = maxH - height;

          if (coorX<coorMaxX) {coorX=coorMaxX}
          if (coorX>coorMinX) {coorX=coorMinX}
          if (coorY<coorMaxY) {coorY=coorMaxY}
          if (coorY>coorMinY) {coorY=coorMinY}

          image.css({
            transform: 'translate3d(' + coorX + 'px, ' + coorY + 'px, 0) scale(' + maxScale + ')'
          });

          lastPosX = coorX;
          lastPosY = coorY;
          adjustScale = maxScale;
        }
      });

      // var x = 0;
      // var y = 0;
      // var pinchX = 0;
      // var pinchY = 0;
      // var pinchMaxX = 0;
      // var pinchMaxY = 0;

      // hammer.on('pinch', function(ev) {
      //   $('#reczoom .t-slds__items-wrapper').attr('data-slider-stop', 'true');
      //   image.removeClass('zimg-animated');
      //   currentScale = adjustScale * ev.scale;
      //   if (currentScale>maxScale) { currentScale=maxScale }
      //   if (currentScale<minScale) { currentScale=minScale }

      //   pinchX = Math.abs((ev.pointers[0].clientX - ev.pointers[1].clientX) / 2);
      //   pinchY = Math.abs((ev.pointers[0].clientY - ev.pointers[1].clientY) / 2);
      //   pinchMaxX = Math.max(ev.pointers[0].clientX, ev.pointers[1].clientX);
      //   pinchMaxY = Math.max(ev.pointers[0].clientY, ev.pointers[1].clientY);

      //   // x = pinchMaxX - pinchX - offsetX;
      //   // y = pinchMaxY - pinchY - offsetY - 40;

      //   x = pinchMaxX - pinchX;
      //   y = pinchMaxY - pinchY - 40;

      //   if (lastPosX >= 0 && imageW*currentScale > maxW) {
      //     coorX = x - x*currentScale + lastPosX*currentScale;
      //   } else {
      //     coorX = (x-lastPosX) - (x-lastPosX)*currentScale + lastPosX*currentScale;
      //   }

      //   if (lastPosY >= 0 && imageH*currentScale > maxH) {
      //     coorY = y - y*currentScale + lastPosY*currentScale;
      //   } else {
      //     coorY = (y-lastPosY) - (y-lastPosY)*currentScale + lastPosY*currentScale;
      //   }

      //   console.log(x, y)

      //   // coorX = x - x*currentScale + lastPosX*currentScale;
      //   // coorY = y - y*currentScale + lastPosY*currentScale;

      //   // if (ev.pointers[0].clientX > ev.pointers[1].clientX) {
      //   //   x1 = ev.pointers[0].clientX - (ev.pointers[0].clientX - ev.pointers[1].clientX)/2;
      //   // } else {
      //   //   x1 = ev.pointers[1].clientX - (ev.pointers[1].clientX - ev.pointers[0].clientX)/2;
      //   // }
      //   // if (ev.pointers[0].clientY > ev.pointers[1].clientY) {
      //   //   y1 = ev.pointers[0].clientY - (ev.pointers[0].clientY - ev.pointers[1].clientY)/2;
      //   // } else {
      //   //   y1 = ev.pointers[1].clientY - (ev.pointers[1].clientY - ev.pointers[0].clientY)/2;
      //   // }

      //   // coorX = x1 - x1*currentScale + lastPosX*currentScale;
      //   // coorY = y1 - y1*currentScale + lastPosY*currentScale;

      //   image.css({
      //     transform: 'translate3d(' + coorX + 'px, ' + coorY + 'px, 0) scale(' + currentScale + ')'
      //   });
      // });

      // hammer.on("pinchend", function (ev) {
      //   if (currentScale>maxScale) { currentScale=maxScale }
      //   if (currentScale<minScale) { currentScale=minScale }

      //   if (imageW * currentScale>maxW) {
      //     width = maxW;
      //   } else {
      //     width = imageW * currentScale;
      //   }
      //   if (imageH * currentScale>maxH) {
      //     height = maxH;
      //   } else {
      //     height = imageH * currentScale;
      //   }
      //   coorMaxX = width - imageW;
      //   coorMinX = maxW - width;
      //   coorMaxY = height - imageH;
      //   coorMinY = maxH - height;

      //   if (coorX<coorMaxX) {coorX=coorMaxX}
      //   if (coorX>coorMinX) {coorX=coorMinX}
      //   if (coorY<coorMaxY) {coorY=coorMaxY}
      //   if (coorY>coorMinY) {coorY=coorMinY}

      //   image.addClass('zimg-animated').css({
      //     transform: 'translate3d(' + coorX + 'px, ' + coorY + 'px, 0) scale(' + currentScale + ')'
      //   });

      //   adjustScale = currentScale;
      //   lastPosX = coorX;
      //   lastPosY = coorY;
      // });

      hammer.on('pan', function(ev) {
        if (clicked) {
          if ( ! isDragging ) {
            isDragging = true;
            image.removeClass('zimg-animated z-img-dragable').addClass('z-img-dragging');
          }
          deltaX = ev.deltaX;
          deltaY = ev.deltaY;
          coorX = lastPosX * adjustScale + deltaX * adjustScale;
          coorY = lastPosY * adjustScale + deltaY * adjustScale;

          image.css({
            transform: 'translate3d(' + coorX + 'px, ' + coorY + 'px, 0) scale(' + adjustScale + ')'
          });

          if (ev.isFinal) {
            isDragging = false;
            image.addClass('zimg-animated z-img-dragable').removeClass('z-img-dragging');
            coorX = coorX + ev.velocityX*100;
            coorY = coorY + ev.velocityY*100; 
            image.css({
              transform: 'translate3d(' + coorX + 'px, ' + coorY + 'px, 0) scale(' + adjustScale + ')'
            });

            if (coorX<coorMaxX) {coorX=coorMaxX}
            if (coorX>coorMinX) {coorX=coorMinX}
            if (coorY<coorMaxY) {coorY=coorMaxY}
            if (coorY>coorMinY) {coorY=coorMinY}

            image.css({
              transform: 'translate3d(' + coorX + 'px, ' + coorY + 'px, 0) scale(' + adjustScale + ')'
            });
            lastPosX = coorX;
            lastPosY = coorY;
          }
        }
      });
    }
  });
}

function t_showZoom() {
    $('.t-zoomable').click(function(e) {
        $("body").addClass("t-zoomer__show");
        $(".t-zoomer__container").html('<div class="t-carousel__zoomed">\
      <div class="t-carousel__zoomer__slides">\
        <div class="t-carousel__zoomer__inner">\
        </div>\
        <div class="t-carousel__zoomer__control t-carousel__zoomer__control_left" data-zoomer-slide="prev">\
          <div class="t-carousel__zoomer__arrow__wrapper t-carousel__zoomer__arrow__wrapper_left">\
            <div class="t-carousel__zoomer__arrow t-carousel__zoomer__arrow_left t-carousel__zoomer__arrow_small"></div>\
          </div>\
        </div>\
        <div class="t-carousel__zoomer__control t-carousel__zoomer__control_right" data-zoomer-slide="next">\
          <div class="t-carousel__zoomer__arrow__wrapper t-carousel__zoomer__arrow__wrapper_right">\
            <div class="t-carousel__zoomer__arrow t-carousel__zoomer__arrow_right t-carousel__zoomer__arrow_small"></div>\
          </div>\
        </div>\
      </div>\
    </div>');
        var id = $(this).closest(".r").attr("id"),
            images = $("#" + id + "").find(".t-zoomable");
        images.each(function() {
            var images_urls = $(this).attr('data-img-zoom-url').split(',');
            if ($(this).is("img")) {
                var imgdescr = $(this).attr('alt')
            }
            if ($(this).is("div")) {
                var imgdescr = $(this).attr('title')
            }
            images_urls.forEach(function() {
                if (typeof imgdescr !== "undefined" && imgdescr !== !1) {
                    $(".t-carousel__zoomer__inner").append("<div class=\"t-carousel__zoomer__item\"><div class=\"t-carousel__zoomer__wrapper\"><img class=\"t-carousel__zoomer__img\" src=\"" + images_urls + "\"></div><div class=\"t-zoomer__comments\"><div class=\"t-zoomer__descr t-descr t-descr_xxs\">" + imgdescr + "</div></div></div>")
                } else {
                    $(".t-carousel__zoomer__inner").append("<div class=\"t-carousel__zoomer__item\"><div class=\"t-carousel__zoomer__wrapper\"><img class=\"t-carousel__zoomer__img\" src=\"" + images_urls + "\"></div><div class=\"t-zoomer__comments\"></div></div>")
                }
            })
        });

        var image_descr = $(".t-carousel__zoomer__item");
        image_descr.each(function() {
            $(this).css("display", "block");
            var height = $(this).find(".t-zoomer__comments").height();
            $(this).css("display", "");
            var image_active = $(this).find(".t-carousel__zoomer__wrapper");
            image_active.css("bottom", height)
        });

       

        $('.t-zoomer__close, .t-zoomer__bg').click(function(e) {
            $('body').removeClass("t-zoomer__show");
            $('body').removeClass("t-zoomer__show_fixed");
            $(document).unbind('keydown')
        })

        $(document).keydown(function(e) {
            if (e.keyCode == 37) {
                pos = (pos - 1) % slideItem.length;
                slideItem.hide(0).eq(pos).show(0)
            }
            if (e.keyCode == 39) {
                pos = (pos + 1) % slideItem.length;
                slideItem.hide(0).eq(pos).show(0)
            }
            if (e.keyCode == 27) {
                $('body').removeClass("t-zoomer__show");
                $('body').removeClass("t-zoomer__show_fixed");
                $(document).unbind('keydown')
            }
        });
        var slides_count = $(".t-carousel__zoomer__item").size();
        if (slides_count > 1) {
            $('body').addClass("t-zoomer__show_fixed")
        } else {
            $(".t-carousel__zoomer__control").css("display", "none")
        }
        $('.t-carousel__zoomer__inner').click(function(e) {
            $('body').removeClass("t-zoomer__show");
            $('body').removeClass("t-zoomer__show_fixed");
            $(document).unbind('keydown')
        });
        var lastScrollTop = 0;
        $(window).scroll(function(event) {
            var st = $(this).scrollTop();
            if (st > lastScrollTop) {
                $('body').not('.t-zoomer__show_fixed').removeClass("t-zoomer__show");
                $(document).unbind('keydown')
            }
            lastScrollTop = st
        })
    })
}

$(document).ready(function() {
    // setTimeout(function() {
        t_initZoom()
    // }, 500)
})